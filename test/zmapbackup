// Set up a collection to contain player information. On the server,
// it is backed by a MongoDB collection named "players".

Players = new Meteor.Collection("players");
Markers = new Meteor.Collection("markers"); //lowercase -> Mongo
newMarkers = [];
tmp = [];




Meteor.startup(function() {
    curMarkers = Markers.find().fetch();
    console.log("Populating the map with:  " + curMarkers.length);
    if (curMarkers.length > 0) {
        for (keys in curMarkers) {
          /*  var dbMarker = new google.maps.Marker({
                position: {
                    lat: curMarkers[keys].lat,
                    lng: curMarkers[keys].lng
                },
                map: map
            }); */
            /*tmp.push(dbMarker);
            console.log('added # ' + tmp[keys].__gm_id + 'to map');
            y(tmp[keys]);
            console.log('end' + tmp[keys].__gm_id); */
            tmp.push(curMarkers[keys]);
            console.log('added # ' + curMarkers[keys]+ 'to map');
            y(curMarkers[keys]);
            console.log('end' + curMarkers[keys]); */


        }
        console.log('marker added to local map');
    }
});

if (Meteor.isClient) {
    GoogleMaps.init({
            'sensor': true, //optional
            //'key': 'MY-GOOGLEMAPS-API-KEY', //optional
            //'language': 'de' //optional
        },
        function() {
            var haightAshbury = new google.maps.LatLng(37.7699298, -122.4469157);
            var mapOptions = {
                zoom: 12,
                center: haightAshbury,
            };
            map = new google.maps.Map(document.getElementById('map-canvas'),
                mapOptions);

            google.maps.event.addListener(map, 'click', function(event) {
                x(event.latLng);
            });


        }
    );


    y = function(item) {
        google.maps.event.addListener(item, 'click', function() {
            info(item);
            return 'blah' + item.__gm_id;
        });
    };

    // Add a marker to the map and push to the array.
    x = function addMarker(location) {
        console.log("Your location is:  " + location);
        $('<div/>').text(location).prepend($('<em/>').text("Your location" + ': ')).appendTo($('#map-canvas'));
        var ans = prompt('save, bitch?');
        if (ans == 'yes') {

            var marker = new google.maps.Marker({
                position: location,
                map: map
            });
            newMarkers.push(marker); //add to new marker array
            console.log('marker added to local map');
        }
    }


    info = function infoView(el) {
        lats = el.position.k
        lngs = el.position.B;

        infowindow = new google.maps.InfoWindow({
            content: '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<h1 id="firstHeading" class="firstHeading">Uluru</h1>' +
                'Lat:' + lats +
                '<br> Long: ' + lngs +
                '</div>'

        })
        infowindow.open(map, el);
    }



    Template.map.greeting = function() {
        return 'Map is loading';
    }

    Template.markerlist.all_markers = function() {
        return Markers.find();
    }


    /* posRef.on('child_added', function(snapshot) {
            var mymarker = snapshot.val();
            displayMapMarkers(mymarker.firepos);
          });
    */


    Template.panel.events({
        'click #myAdd': function() {
            if (newMarkers.length < 1) {
                alert('none to save');
            }
            if (newMarkers.length > 0) {
                for (keys in newMarkers) {
                    tmp.push(newMarkers[keys])
                    console.log(tmp[keys]);
                    console.log("Position data is:  " + tmp[keys].position);
                    var position = tmp[keys].position;
                    var lat = tmp[keys].position.k;
                    var lng = tmp[keys].position.B;
                    var date = new Date();
                    date = date.toJSON();
                    Markers.insert({
                        text: 'Something',
                        //map_id: Session.get('list_id'),
                        pos: position,
                        lat: lat,
                        lng: lng,
                        date: date,
                        //timestamp: (new Date()).getTime(),
                    });
                    curMarkers.push(newMarkers[keys]); //add to new marker array
                }
                alert('saved');
                newMarkers = [];
            }

        }
    });

    Template.hello.events({
        'click input': function() {
            alert('pooop');
        }
    });

    Template.hello.events({
        'click #test': function() {
            alert('peeper');
        }
    });

}

// On server startup, create some players if the database is empty.
if (Meteor.isServer) {

    Meteor.startup(function() {
        if (Players.find().count() === 0) {
            var names = ["Ada Lovelace",
                "Grace Hopper",
                "Marie Curie",
                "Carl Friedrich Gauss",
                "Nikola Tesla",
                "Claude Shannon"
            ];
            for (var i = 0; i < names.length; i++)
                Players.insert({
                    name: names[i],
                    score: Math.floor(Random.fraction() * 10) * 5
                });
        }
    });
}
